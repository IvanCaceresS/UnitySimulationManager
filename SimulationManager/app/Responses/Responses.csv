id%|%pregunta%|%respuesta%|%input_tokens%|%output_tokens2745
1%|%TEST%|%1.PrefabMaterialCreator.cs{public static class PrefabMaterialCreator{const string pF=\"Assets/Resources/Prefabs\", mF=\"Assets/Resources/PrefabsMaterials\";[MenuItem(\"Tools/Crear Prefabs y Materiales\")]public static void CreatePrefabsAndMaterials(){if(!AssetDatabase.IsValidFolder(pF)){AssetDatabase.CreateFolder(\"Assets/Resources\",\"Prefabs\");Debug.Log(\"Carpeta creada: \" + pF);}if(!AssetDatabase.IsValidFolder(mF)){AssetDatabase.CreateFolder(\"Assets/Resources\",\"PrefabsMaterials\");Debug.Log(\"Carpeta creada: \" + mF);}CPAM(\"SCerevisiae_1\",PrimitiveType.Sphere,new Vector3(5,5,5),new Vector3(90,0,0),0);CPAM(\"SCerevisiae_2\",PrimitiveType.Sphere,new Vector3(5,5,5),new Vector3(90,0,0),0);AssetDatabase.SaveAssets();AssetDatabase.Refresh();Debug.Log(\"Prefabs y materiales creados.\");}static void CPAM(string n,PrimitiveType t,Vector3 s,Vector3 r,int c){var o = GameObject.CreatePrimitive(t);o.name = n;o.transform.rotation = Quaternion.Euler(r);o.transform.localScale = s;var col = o.GetComponent<Collider>();if(col != null) Object.DestroyImmediate(col);if(c == 0) o.AddComponent<SphereCollider>();else o.AddComponent<CapsuleCollider>();var sh = Shader.Find(\"Universal Render Pipeline/Lit\");if(sh == null){Debug.LogError(\"Shader URP/Lit no encontrado.\");return;}var m = new Material(sh);if(n==\"SCerevisiae_1\") m.color = new Color(1,0.5f,0,1); else if(n==\"SCerevisiae_2\") m.color = new Color(0,1,1,1); else m.color = Color.white;AssetDatabase.CreateAsset(m,Path.Combine(mF,n+\".mat\"));AssetDatabase.SaveAssets();AssetDatabase.Refresh();o.GetComponent<Renderer>().sharedMaterial = m;PrefabUtility.SaveAsPrefabAsset(o,Path.Combine(pF,n+\".prefab\"));Object.DestroyImmediate(o);}}}2.CreatePrefabsOnClick.cs{private void CrearEntidad(Vector3 p){if(currentPrefabIndex>=prefabs.Count)return;var sQ = spawnerQuery.ToEntityArray(Allocator.Temp);if(currentPrefabIndex>=sQ.Length){Debug.LogError($\"No se encontró spawner en índice {currentPrefabIndex}\");sQ.Dispose();return;}Entity s = sQ[currentPrefabIndex];sQ.Dispose();Entity pe = entityManager.GetComponentData<PrefabEntityComponent>(s).prefab;Entity e = entityManager.Instantiate(pe);float os = entityManager.GetComponentData<LocalTransform>(pe).Scale;quaternion or = entityManager.GetComponentData<LocalTransform>(pe).Rotation;float ry = UnityEngine.Random.Range(0f,360f);quaternion nr = math.mul(or, quaternion.RotateY(math.radians(ry)));float h = os*0.5f;float3 ap = new float3(p.x, math.max(p.y+h, h), p.z);entityManager.SetComponentData(e,new LocalTransform{Position=ap,Rotation=nr,Scale=os});string n = prefabs[currentPrefabIndex].name;switch(n){case \"SCerevisiae_1\":entityManager.AddComponentData(e,new SCerevisiae_1Component{TimeReference=2400f, SeparationThreshold=0.80f, MaxScale=5f, GrowthTime=0f, GrowthDuration=2400f*0.80f, TimeSinceLastDivision=0f, DivisionInterval=2400f*0.80f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, GrowthDirection=new float3(0,0,0)});break;case \"SCerevisiae_2\":entityManager.AddComponentData(e,new SCerevisiae_2Component{TimeReference=3000f, SeparationThreshold=0.85f, MaxScale=5f, GrowthTime=0f, GrowthDuration=3000f*0.85f, TimeSinceLastDivision=0f, DivisionInterval=3000f*0.85f, HasGeneratedChild=false, Parent=Entity.Null, IsInitialCell=true, SeparationSign=0, GrowthDirection=new float3(0,0,0)});break;default:Debug.LogWarning($\"No hay componente ECS para '{n}'\");break;}AddPhysicsComponents(e,n,os);Debug.Log($\"Entidad '{n}' creada en {ap}\");}private void AddPhysicsComponents(Entity e,string n,float s){BlobAssetReference<Unity.Physics.Collider> c = default;Material m = new Material{Friction=8f, Restitution=0f};switch(n){case \"SCerevisiae_1\":case \"SCerevisiae_2\":c = Unity.Physics.SphereCollider.Create(new SphereGeometry{Center=float3.zero, Radius=s*0.1f}, CollisionFilter.Default, m);break;default:Debug.LogWarning($\"No collider para '{n}'\");return;}entityManager.AddComponentData(e,new PhysicsCollider{Value=c});if(c.IsCreated){var mp = c.Value.MassProperties;entityManager.AddComponentData(e,PhysicsMass.CreateDynamic(mp,1f));}entityManager.AddComponentData(e,new PhysicsVelocity{Linear=float3.zero,Angular=float3.zero});entityManager.AddComponentData(e,new PhysicsGravityFactor{Value=1f});entityManager.AddComponentData(e,new PhysicsDamping{Linear=0f,Angular=50f});Debug.Log($\"Física añadida a '{n}' (fricción alta, damping angular)\");}}3.SCerevisiae_1Component.cs{using Unity.Entities;using Unity.Mathematics;public struct SCerevisiae_1Component : IComponentData{public float TimeReference, MaxScale, GrowthTime, GrowthDuration, TimeSinceLastDivision, DivisionInterval, SeparationThreshold;public bool HasGeneratedChild, IsInitialCell, TimeReferenceInitialized;public Entity Parent;public int SeparationSign;public float3 GrowthDirection;}}4.SCerevisiae_2Component.cs{using Unity.Entities;using Unity.Mathematics;public struct SCerevisiae_2Component : IComponentData{public float TimeReference, MaxScale, GrowthTime, GrowthDuration, TimeSinceLastDivision, DivisionInterval, SeparationThreshold;public bool HasGeneratedChild, IsInitialCell, TimeReferenceInitialized;public Entity Parent;public int SeparationSign;public float3 GrowthDirection;}}5.SCerevisiae_1System.cs{if(transform.Scale>=maxScale){organism.TimeSinceLastDivision+=deltaTime; if(organism.TimeSinceLastDivision>=organism.DivisionInterval){Unity.Mathematics.Random rng=new Unity.Mathematics.Random((uint)(entityInQueryIndex+1)*99999);float angle=rng.NextFloat(0f,math.PI*2f);float3 rnd=new float3(math.cos(angle),math.sin(angle),0f);Entity child=ecb.Instantiate(entityInQueryIndex,entity);LocalTransform ct=transform;ct.Scale=0.01f;SCerevisiae_1Component comp=organism;comp.TimeReferenceInitialized=false;comp.GrowthTime=0f;comp.TimeSinceLastDivision=0f;comp.IsInitialCell=false;comp.Parent=entity;comp.GrowthDirection=rnd;ct.Position=transform.Position;ecb.SetComponent(entityInQueryIndex,child,ct);ecb.SetComponent(entityInQueryIndex,child,comp);organism.TimeSinceLastDivision=0f;}} if(!organism.IsInitialCell && organism.Parent!=Entity.Null && parentMap.TryGetValue(organism.Parent,out ParentData pd)){if(transform.Scale<organism.SeparationThreshold*maxScale){float r=math.clamp(transform.Scale/(organism.SeparationThreshold*maxScale),0f,1f);float off=(pd.Scale*0.5f)*r;float3 wd=math.mul(pd.Rotation,organism.GrowthDirection);transform.Position=pd.Position+wd*off;transform.Rotation=pd.Rotation;} else organism.Parent=Entity.Null;}}6.SCerevisiae_2System.cs{if(transform.Scale>=maxScale){organism.TimeSinceLastDivision+=deltaTime; if(organism.TimeSinceLastDivision>=organism.DivisionInterval){Unity.Mathematics.Random rng=new Unity.Mathematics.Random((uint)(entityInQueryIndex+1)*54321);float angle=rng.NextFloat(0f,math.PI*2f);float3 rnd=new float3(math.cos(angle),math.sin(angle),0f);Entity child=ecb.Instantiate(entityInQueryIndex,entity);LocalTransform ct=transform;ct.Scale=0.01f;SCerevisiae_2Component comp=organism;comp.TimeReferenceInitialized=false;comp.GrowthTime=0f;comp.TimeSinceLastDivision=0f;comp.IsInitialCell=false;comp.Parent=entity;comp.GrowthDirection=rnd;ct.Position=transform.Position;ecb.SetComponent(entityInQueryIndex,child,ct);ecb.SetComponent(entityInQueryIndex,child,comp);organism.TimeSinceLastDivision=0f;}} if(!organism.IsInitialCell && organism.Parent!=Entity.Null && parentMap.TryGetValue(organism.Parent,out ParentData pd)){if(transform.Scale<organism.SeparationThreshold*maxScale){float r=math.clamp(transform.Scale/(organism.SeparationThreshold*maxScale),0f,1f);float off=(pd.Scale*0.5f)*r;float3 wd=math.mul(pd.Rotation,organism.GrowthDirection);transform.Position=pd.Position+wd*off;transform.Rotation=pd.Rotation;} else organism.Parent=Entity.Null;}}%|%2902%|%2745